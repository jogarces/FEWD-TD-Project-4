// **********************************************
// _grid.scss
// styles related to the grid system and
// main container.
// major grid styles have been added here for you
// but additional styling may be needed
// **********************************************

@mixin bp($breakpoint) {

    $min-width: map-get($breakpoints, $breakpoint);

    @if $breakpoint=='mobile' {
        @media (min-width: $min-width) {
            @content;
        }
    }

    @else if $breakpoint=='desktop' {
        @media (min-width: $min-width) {
            @content;
        }
    }

}

// grid base class
.grid {

    // .grid__row
    &__row {
        padding: 1em 10px;
        display: flex;
        flex-direction: column;

        @include bp('mobile') {
            flex-direction: row;
        }
    }

    // .grid__col
    &__col {

        // create grid columns dynamically
        // loop through each column size
        @for $i from 1 through 12 {

            // concatenate CSS selector, ie when $i = 1,
            // selector would be .grid__col--1
            &--#{$i} {

                margin-top: 10px;
                flex-basis: 100%;

                @include bp('mobile') {
                    // base stlyes applied to all grid columns
                    margin-top: 0;

                    // make column width a percentage of the column number / total columns
                    flex-basis: #{$i / 12 * 100 + "%"};

                }

                @if($i==3) {
                    &:nth-child(1) {
                        align-self: center;
                        
                    }
                }

            }
        }
    }
}

// targets all elements with classes that begin with grid__col
[class^=grid__col] {

    // grid__col + grid__col, targets two sibling columns
    & + & {

        @include bp('mobile') {
            margin-left: 10px;
        }

    }
}
